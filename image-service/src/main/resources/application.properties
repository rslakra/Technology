#The bean 'jpaAuditingHandler', defined in null, could not be registered.
# A bean with that name has already been defined in null and overriding is disabled.
#spring.main.allow-bean-definition-overriding=true
# Therefore, database queries may be performed during view rendering.
# Explicitly configure spring.jpa.open-in-view to disable this warning
# spring.jpa.open-in-view is enabled by default.
spring.jpa.open-in-view=false
#server.error.include-stacktrace=never
server.error.include-message=always

# App Settings
apiPrefix=/v1
restPrefix=/rest

# Log Settings
#'LEVEL' is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF.
logging.level.root=WARN
logging.level.org.springframework.web=WARN
## Hibernate Logging
logging.level.org.hibernate=ERROR
logging.level.org.hibernate.SQL= WARN

# Server Settings
# <code>http://localhost:8080/image-service</code>
#
server.port=8080
#server.servlet.contextPath=/image-service
management.server.port=8081
management.server.address=127.0.0.1
#
#debug=true
#spring.datasource.platform=hsqldb
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto = create-drop
#
# Hikari Settings
#
spring.datasource.hikari.maximumPoolSize=2
#
# H2 Database Settings
#
#spring.datasource.url=jdbc:h2:mem:ImageService
spring.datasource.url=jdbc:h2:file:~/Downloads/H2DB/ImageService;AUTO_SERVER=TRUE;
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#
# H2 Console Settings
# <code>http://localhost:8080/image-service/h2</code>
#
# Enabling H2 Console
spring.h2.console.enabled=true
# Custom H2 Console URL
spring.h2.console.path=/h2
#spring.h2.console.settings.web-allow-others=true
#spring.jpa.defer-datasource-initialization = true

#
# Spring Chain Strategy Settings
#
# To use cache busting, the following configuration will configure a cache busting solution for all static
# resources, effectively adding a content hash in URLs,
# such as <link href="/css/spring-2a2d595e6ed9a0b24f027f2b63b134d6.css"/>:
#spring.web.resources.chain.strategy.content.enabled=true
#spring.web.resources.chain.strategy.content.paths=/**

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
